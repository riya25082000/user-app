import 'dart:async';

import 'package:finance_app/Insurance/InsuranceHomePage.dart';
import 'package:finance_app/Investments/InvestmentHomePage.dart';
import 'package:finance_app/MyGoals/GoalsHomePage.dart';

import 'package:finance_app/SignUP_PageWith_Chnages/Working_signin.dart';
import 'package:flutter/material.dart';
import 'package:flutter_local_notifications/flutter_local_notifications.dart';
import '../NotificationPage.dart';
import '../menu_page.dart';


class HomePage extends StatefulWidget {
  final String currentUserID;
  HomePage({@required this.currentUserID});
  @override
  _HomePageState createState() => _HomePageState(currentUserID: currentUserID);
}

class _HomePageState extends State<HomePage> {
  final String currentUserID;
  Timer _timer;

  FlutterLocalNotificationsPlugin fltrNotification;
  int _currentIndex=0;
  void onTap(int index)
  {
    setState(() {
      _currentIndex=index;
    });

  }
  @override
  void initState() {
    // TODO: implement initState
    super.initState();
    _initialiseTimer();
    var androidInitilize = new AndroidInitializationSettings('app_icon');
    var iOSinitilize = new IOSInitializationSettings();
    var initilizationsSettings =
    new InitializationSettings(androidInitilize, iOSinitilize);
    fltrNotification = new FlutterLocalNotificationsPlugin();
    fltrNotification.initialize(initilizationsSettings,
        onSelectNotification: notificationSelected);
  }

  Future notificationSelected(String payload) async {
    showDialog(
      context: context,
      builder: (context) => AlertDialog(
        content: Text("Notification : $payload"),
      ),
    );
  }

  void _handleUserInteraction([_]) {
    if (!_timer.isActive) {
      // This means the user has been logged out
      return;
    }

    _timer.cancel();
    _initialiseTimer();
  }

  void _initialiseTimer() {
    _timer = Timer.periodic(const Duration(minutes: 1), (_) => logoutUser);
  }

  void logoutUser() {
    Navigator.pushReplacement(context,
        MaterialPageRoute(builder: (BuildContext context) => LoginPage()));
    _timer.cancel();
  }

  _HomePageState({@required this.currentUserID});
  @override
  final GlobalKey<ScaffoldState> _scaffoldKey=new GlobalKey();
  Widget build(BuildContext context) {
    setState(() {
      if(_currentIndex==1)
      {
        Future.delayed(Duration.zero, ()async{
          Navigator.push(context, MaterialPageRoute(builder: (context) =>  InvestmentHomePage()));});
        _currentIndex=0;
      }
      else if(_currentIndex==2)
      {
        Future.delayed(Duration.zero, ()async{
          Navigator.push(context, MaterialPageRoute(builder: (context) =>  InsuranceHomePage()));});
        _currentIndex=0;
      }
      else if(_currentIndex==3)
      {
        Future.delayed(Duration.zero, ()async{
          Navigator.push(context, MaterialPageRoute(builder: (context) =>  GoalsHomePage()));});
        _currentIndex=0;
      }
      else if(_currentIndex==4)
      {
        _scaffoldKey.currentState.openDrawer();
        _currentIndex=0;
      }
    });


    var width = MediaQuery.of(context).size.width;
    var height = MediaQuery.of(context).size.height;
    return Scaffold(
      key: _scaffoldKey,
      appBar: AppBar(
        iconTheme: IconThemeData(
          color: Color(0xff373D3F),
        ),
        backgroundColor: Color(0xff63E2E0),
        centerTitle: true,
        title: Text(
          'HOME',
          style: TextStyle(
            color: Color(0xff373D3F),
          ),
        ),
      ),
      drawer: Drawer(
        child: menuPage(
          currentUserID: currentUserID,
        ),
      ),

      body: LayoutBuilder(
        builder: (BuildContext context, BoxConstraints viewportConstraints) {
          return SingleChildScrollView(
            child: ConstrainedBox(
              constraints: BoxConstraints(
                minHeight: viewportConstraints.maxHeight,
              ),
              child: Padding(
                padding: EdgeInsets.all(18.0),
                child: Column(
                  children: <Widget>[
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: <Widget>[
                        Text(
                          'Welcome',
                          style: TextStyle(
                            fontSize: 40,
                            fontWeight: FontWeight.bold,
                            color: Color(0xff373D3F),
                          ),
                        ),
                        IconButton(
                          iconSize: 40,
                          onPressed: () {
                            Navigator.push(
                                context,
                                MaterialPageRoute(
                                    builder: (BuildContext context) =>
                                        NotificationPage(
                                          currentUserID: currentUserID,
                                        )));
                          },
                          icon: Icon(Icons.notifications_none),
                          color: Color(0xff373D3F),
                        )
                      ],
                    ),
                    Container(
                      alignment: Alignment.topLeft,
                      child: Text(
                        'User',textAlign: TextAlign.left,
                        style: TextStyle(
                          fontSize: 40,
                          fontWeight: FontWeight.bold,
                          color: Color(0xff373D3F),
                        ),
                      ),
                    ),
                    SizedBox(
                      height: 30,
                    ),


                    Container(

                      margin: EdgeInsets.only(top: 10),
                      padding: EdgeInsets.all(5),
                      decoration: BoxDecoration(
                          color: Colors.white,
                          borderRadius: BorderRadius.all(Radius.circular(15)),
                          boxShadow: [
                            BoxShadow(
                              color: Colors.grey,
                              blurRadius: 10.0, // soften the shadow
                              spreadRadius: 2, //extend the shadow
                            )
                          ]),
                      height: height * 0.27,
                      child: Padding(
                        padding: const EdgeInsets.all(20.0),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: <Widget>[
                            Row(
                              mainAxisAlignment:
                              MainAxisAlignment.spaceBetween,
                              children: <Widget>[
                                Column(
                                  children: <Widget>[
                                    Text('Invested',style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                                    SizedBox(
                                      height: 5,
                                    ),
                                    Text('43,74,652.34',style: TextStyle(fontSize: 15),),
                                  ],
                                ),
                                Column(
                                  children: <Widget>[
                                    Text('Current',style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                                    SizedBox(
                                      height: 5,
                                    ),
                                    Text('51,80,487.55',style: TextStyle(fontSize: 15),),
                                  ],
                                ),
                              ],
                            ),
                            Divider(
                              color: Colors.grey,
                            ),
                            Row(
                              mainAxisAlignment:
                              MainAxisAlignment.spaceBetween,
                              children: <Widget>[
                                Column(
                                  crossAxisAlignment:
                                  CrossAxisAlignment.center,
                                  children: <Widget>[
                                    Text('P&L',style: TextStyle(fontSize: 22,fontWeight: FontWeight.bold),),
                                  ],
                                ),
                                Column(
                                  children: <Widget>[
                                    Text(
                                      '+8,05,835.20',
                                      style: TextStyle(color: Colors.green,fontSize: 15),
                                    ),
                                    SizedBox(
                                      height: 5,
                                    ),
                                    Text(
                                      '+18.42%',
                                      style: TextStyle(color: Colors.green,fontSize: 15),
                                    ),
                                  ],
                                )
                              ],
                            ),
                          ],
                        ),
                      ),
                    ),

                  ],
                ),
              ),
            ),
          );
        },
      ),
      bottomNavigationBar: BottomNavigationBar(
          type: BottomNavigationBarType.fixed,
          elevation: 10,
          currentIndex: _currentIndex,
          backgroundColor: Color(0xff63E2E0),
          unselectedItemColor: Colors.black,
          selectedItemColor: Colors.white,
          items: [
            BottomNavigationBarItem(

              icon: Icon(Icons.pages),
              title: Text('Home'),

            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.attach_money),
              title: Text('Investment'),

            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.home),

              title: Text(('Insurance')),

            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.flag),
              title: Text(('Goals')),

            ),
            BottomNavigationBarItem(
              icon: Icon(Icons.add),
              title: Text(('More')),

            ),
          ],
          onTap:onTap

      ),
    );
  }
}
